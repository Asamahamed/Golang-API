{
    "swagger": "2.0",
    "info": {
      "description": "This is a sample CRUD API for managing users.",
      "version": "1.0.0",
      "title": "CRUD API",
      "contact": {
        "email": "support@swagger.io"
      },
      "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
      }
    },
    "host": "localhost:8000",
    "basePath": "/api/v1",
    "tags": [
      {
        "name": "users",
        "description": "Operations about users"
      }
    ],
    "schemes": [
      "http"
    ],
    "paths": {
      "/users": {
        "post": {
          "tags": ["users"],
          "summary": "Create a new user",
          "description": "Create a new user with the input payload",
          "operationId": "createUser",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "in": "body",
              "name": "user",
              "description": "User object that needs to be added",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User created",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400": {
              "description": "Invalid input",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "get": {
          "tags": ["users"],
          "summary": "Get all users",
          "description": "Get a list of all users",
          "operationId": "getUsers",
          "produces": ["application/json"],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          }
        }
      },
      "/users/{id}": {
        "get": {
          "tags": ["users"],
          "summary": "Get a user by ID",
          "description": "Get user details by ID",
          "operationId": "getUserById",
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of user to return",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "200": {
              "description": "Successful operation",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "404": {
              "description": "User not found",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "put": {
          "tags": ["users"],
          "summary": "Update an existing user",
          "description": "Update an existing user by ID",
          "operationId": "updateUser",
          "consumes": ["application/json"],
          "produces": ["application/json"],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of user to update",
              "required": true,
              "type": "string"
            },
            {
              "in": "body",
              "name": "user",
              "description": "Updated user object",
              "required": true,
              "schema": {
                "$ref": "#/definitions/User"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "User updated",
              "schema": {
                "$ref": "#/definitions/User"
              }
            },
            "400": {
              "description": "Invalid input",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            },
            "404": {
              "description": "User not found",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        },
        "delete": {
          "tags": ["users"],
          "summary": "Delete a user",
          "description": "Delete a user by ID",
          "operationId": "deleteUser",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "description": "ID of user to delete",
              "required": true,
              "type": "string"
            }
          ],
          "responses": {
            "204": {
              "description": "User deleted"
            },
            "404": {
              "description": "User not found",
              "schema": {
                "$ref": "#/definitions/ErrorResponse"
              }
            }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "type": "object",
        "required": ["id", "name", "email"],
        "properties": {
          "id": {
            "type": "string",
            "example": "123"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "johndoe@example.com"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      }
    }
  }
  